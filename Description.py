import os
import sys
import pygame
import ctypes

pygame.display.set_mode((0, 0))
pygame.mixer.init()
user32 = ctypes.windll.user32
# получаем разрешения компьютера для создания окна
user32.SetProcessDPIAware()
width, height = [user32.GetSystemMetrics(0), user32.GetSystemMetrics(1)]
off_x = width / 1920
off_y = height / 1080


def load_image(name, colorkey=None):  # функция для загрузки изображения
    fullname = os.path.join('project', name)
    if not os.path.isfile(fullname):
        print(f"Файл с изображением '{fullname}' не найден")
        sys.exit()
    image = pygame.image.load(fullname)
    if colorkey is not None:
        image = image.convert()
        if colorkey == -1:
            colorkey = image.get_at((0, 0))
        image.set_colorkey(colorkey)
    else:
        image = image.convert_alpha()
    return image


# Тексты описаний предметов в инвентаре

text_glasses = "Причудливые очки - старые медные очки, чьи стеклянные окуляры уже много лет покрыты нестираемой пылью."

text_451_book = 'Книга "451 градус по Фарентгейту" под авторством Рэя Брэдбери. Хоть в ней нет его автографа, она ' \
                'всё равно уникальна хотя бы своими светящимися цифрами "451".'

text_crowbar = 'Лом - прочный ломик из нержавейки, на своём веку повидавший слишком многое для обычного ломика,' \
               ' однако ветеранское пособие ему не светит, оттого он всё ещё верно служит отдирателем' \
               ' гнилых дощечек и взломщиком ящиков.'

text_necronomicon = 'Руководство по уходу за свои домашним призраком' \
                    ' "Некрономикон". Девиз компании-производителя гласит:' \
                    ' "Даже чайник должен знать, как ухаживать за призраком!"'

text_hacksaw = 'Ножовка - новенькая полужелезная одноразовая ножовка, идущая в наборе "юный взломщик".' \
               ' Несмотря на дешевизну материалов' \
               ' производства, эта ножовка способна один раз распилить тоненькую решётку.'

text_knife = 'Нож - старинная реликвия древнего рода викингов.' \
             ' Нанесённые на лезвие и рукоять рунические символы иногда' \
             ' едва заметно светятся тусклым синим светом, особенно если поднести нож поближе к "Некрономикону".'

text_meat = 'Мясо - огромный кусок первосортной вырезки, либо срезанный с ещё живого существа, либо ' \
            'срезанный с ещё живого существа неумелым резчиком по мясу.'

text_spices = 'Специи - небольшая стеклянная ёмкость с деревянной крышкой, обогнутой тонкой оловянной проволокой. ' \
              'Жаль, что разобрать слова на этикетке невозможно, но всё равно Вам кажется, что специи могут добавить ' \
              'жару любому блюду.'

text_cook_book = 'Книга рецептов - огромный сборник разнообразных блюд разной степени изысканности, для приготовления' \
                 ' которых необходимо превосходное знание ' \
                 'французского. Однако разобрав по интуиции несколько слов, можно, например, ' \
                 'приготовить простейший стейк Боичагнер.'

text_bone = 'Костяной амулет - всё ещё остаётся множество версий, как он ' \
            'мог оказаться в том куске мяса, однако, это не самое странное его свойство.' \
            ' Держа его в руках, Вы словно чуствуете, что он едва пульсирует, испуская тепло, и едва слышимо поёт...'

text_key = 'Ключ - позолоченный ключ, сделанный на заказ для какой-то богатой семьи, о чём свидетельствуют' \
           ' пустые ёмкости для драгоценностей. Быть может, это и есть тот самый ключ, отпирающий входную дверь?'

# Далее тексты интерактивных объектов: доактивные, активные, послеактивные

text_exit_door = ['Дверь заперта, но для решения этой проблемы Вам, '
                  'очевидно, просто нужен нужный ключ, несомненно, '
                  'скрытый где-то в доме.',
                  'Теперь дверь открыта! Взаимодействуйте с дверью ещё раз для завершения игры.',
                  '"Настало время уходить. Пойдём, у нас есть дела, требующие их завершить..."']

text_friendly_note = ['Записка, полная междометий, содержит следующую '
                      'мысль: Написавший её ушёл и придёт не скоро, поэтому '
                      'ждать его не стоит.', "Также постскриптум написано, что ходьба на WASD, взаимодействовать "
                                             "с объектами при помощи ЛКМ и курсора мыши."
                                             "Что бы оно ни значило, Вам"
                                             " кажется это полезной информацией."]

text_chair = ['', 'Очки, лежащие на кресле, не потдаются протиранию, но всё же'
                  ' позволяют увидеть больше. По крайней мере, Вам так говорит внутренний голос.',
              'Удобное кресло, бюджета которого не хватило на паутину, отчего оно выглядит довольно новым.',
              '"Я любила спать в этом кресле. Удобное, мягкое, к тому же после бабушки оно всегда оставалось тёплым. '
              'После её смерти кресло оккупировал кот, а от него власть над креслом передалась мне."']

text_bookshelf = ['Окромя пары интересных произведений, этот книжный шкаф не смог проявить себя достаточно '
                  'интересным для взаимодействия.',
                  'Вновь перелистав все книги, Вы замечаете, что цифры '
                  'в названии одной из них странно светятся. Может, это что-то значит?',
                  'Из всех книг привлекательнее всех оказалась странная чёрная книжка с неразбираемой надписью на '
                  'обложке. Ради интереса туда было вписано какое-то имя, что не дало никакого результата.',
                  '"Раньше здесь был коридор в нашу библиотеку. Дедушка любил читать и часто рассказывал мне о '
                  'прочитанном,'
                  ' порой говоря на непонятных мне языках. Может, оттого я ничего и не помню об этих книгах."']

text_safe = ['Неизвестно, как этот новенький сейф оказался в этом '
             'старом каменном коридоре, как и непонятна причина столь больших размеров, '
             'однако сейф что-то хратит за этим циферблатом.',
             'Светящиеся циферки (неожиданно) оказались комбинацией от сейфа,'
             ' в чьих примерно трёх кубометрах пространства лежал лом.',
             'После таинственной пропажи лома сей опустел, оставляя в себе довольно много'
             ' пространства для колоний Паукландов.',
             '"Раньше здесь хранились богатства моей семьи: '
             'золотые мечи, свинцовая голова дракона, и целая коллекция ломов. Из всего этого уцелел лишь лом."']

text_hole_floor = ['При расчёте массы крысы, которая могла бы отгрызть эту дощечку, Ваша голова очень сильно заболела'
                   ', поэтому не стоит тратить так много внимания на обычную дощечку.',
                   'Теперь и крыса не нужна!'
                   ' В небольшой полости под полом лежала толстая книжка, пахнущая кровью и горелым кофе, словно '
                   'кто-то прошлой ночью до самого утра писал в ней.',
                   'Кланы пауков и там враждуют между собой за эту полость,'
                   ' а после того, как Вы открыли сейф, возможно, война разгорится ещё сильнее.',
                   '"Помню, как однажды один из отпрысков '
                   'Пейлмеров откуда-то достал петарды. Я предупреждала его, что это опасно, но он не'
                   ' слушал меня. И в конце концов... В общем, с того вечера тут была эта дыра."']

text_crafttable = ['Этот ящик явно находится не на своём месте, однако в гостинной или на кухне он бы '
                   'выглядил ещё комичнее. В нём наверняка много инструментов, но без инструмента его не открыть.',
                   'Все отсеки, кроме небольшого выдвижного ящичка с ножовкой, оказались пусты. Не густо, но '
                   'ножовка может пригодиться. ', 'С каждым Вашим действием '
                                                  'количество пригодных территорий для проживания пауков становится всё больше и больше. Может, пора'
                                                  ' перестать оставлять так много пустого пространства?',
                   '"Помню, как я тратила многие часы на создание железных цветов при помощи всего '
                   'лишь небольшой ножовки и куска '
                   'металла. Мама говорила, что эти цветы станут одним из главных богатсв '
                   'нашей семьи, хотя до последнего дня я не видела их в нашем сейфе."']

text_knife_case = ['Буквы на решётке футляра кажутся Вам знакомыми, однако, они давно вышли из английского языка.'
                   ' Кто бы ни был владельцем этого ножа, но родом он явно не отсюда.',
                   'Ценой своего существования ножовка освободила нож от железных оков.'
                   ' Нет повести печальнее на свете, но всё же нож может пригодиться.',
                   'Плоская поверхность непригодна для проживания пауков. Поздравляю, Вам удалось не создать '
                   'очередной повод для войны пауков!',
                   '"Как-то раз к нам пришёл странный человек, похожий на викингов из дедушкиных историй. Кстати, как'
                   ' раз его полиглотство и помогло нам пообщатсья с незнакомнцем и получить от него в подарок'
                   ' этот нож."']

text_eating_table = ['', 'Вы уже видели эту книжку: её показывали ранее в каком-то кулинарном шоу. Как говорили '
                         'телеведущие, эта книжка принадлежала древней французской семье кулинаров, и в ней собраны '
                         'тысячи рецептов изысканных блюд. Больше всего Вам приглянулся стейк...'
                         ' Эм... Боичагнер?',
                     'Железный лес вилок, ложек и ножей создаёт неблагоприятные условия для проживания пауков, поэтому '
                     'Ваша совесть чиста ровно до того момента, пока пауки не научатся пились ложки.',
                     '"Помню, как однажды миссис Феймуар подарила эту книгу маме,'
                     ' заверив в надёжности её рецептов. Честно сказать, из всех рецептов лишь некоторые '
                     'действительно были хорошими, например, стейк Буаншанье"']

text_fridge = ['Морозный ураган обрушился на Вас сразу же после открытия холодильника. Вы быстро закрыли его, '
               'но теперь для исчезновения холода нужно время.',
               'Зажмурившись, Вы открываете холодильник, но холодной лавины на Вас не вывалилось, поэтому Вы '
               'просто быстро взяли стейк и закрыли холодильник.',
               'Только самые отчаянные пауки будут селиться в Гренландии холодильника, поэтому войны за'
               ' место тут точно не будет.',
               '"Не знаю, сколько времени ушло на перемещение его сюда, но когда этот холодильник был только куплен,'
               ' отец и прислуги потратили около недели,'
               ' чтобы просто затащить его в дом, а потом ещё три дня на торжественную установку его на кухню."']

text_cookcase = ['Простой шкафчик со специями, компонентами для'
                 ' смертельных ядов и пробирок с крысиными головами и хвостами. В общем, ничего интересного.',
                 'Из всего рецепта Вам удалось разобрать лишь название одних специй, и Вам кажется, что '
                 'их вполне хватит для готовки.',
                 'Судя по всему, этот шкафчик со специями является оплодом спокойствия и'
                 ' мира дял пауков, давно разделённый между кланами и не видавший войн, '
                 'так что волноваться за благополучие этого места не стоит.',
                 '"Теперь я вспомнила, почему на кухне я всегда зажимала нос: старики Уестлефт подарили нам целый'
                 ' мешок специй из Бенгалии и Персии, чей запах у меня вызывал чихание. Хорошо, '
                 'что эти специи давно закончились."']

text_gas_oven = ['Неплохая газовая плита, ставшая более-менее рабочей явно только благодаря тяжёлому труду её'
                 ' владельца, чьи золотые руки дали плите вторую жизнь, а Вам - возможность что-нибудь себе приготовить.',
                 'То ли специи не те, то ли мясо не того сорта, но по итогу всё мясо просто сгорело, оставив'
                 ' лишь странную костяную вещицу. Размышляя о том, как она могла оказаться в мясе, Вы кладёте костяшку себе'
                 ' в карман.',
                 'При попытке прикоснуться к плите костяной амулет начиает сильно обжигать, отчего'
                 ' о втором шансе проявить свои кулинарные способности можно даже не мечтать.',
                 '"Привезена из Нового Света, оттого легко ломалась и '
                 'становилась причиной частых расходов на мастера. Однажды к нам в гости зашёл мистер Карноу, и вместе'
                 ' с отцом они починили плиту раз и навсегда. И она ещё работает, что удивительно."']

text_shrine = ['Большой стол для семейных застолий. Вернее, он был им до того момента, как '
               'на нём были начерчены эти '
               'круги и символы, безусловно, придавшие столу слишком оккультический вид для каких-либо трапез на нём.',
               'Выложив ранее собранные предметы на столе, Вы, сами того не понимая, провели странный ритуал,'
               'после которого почувстовали, как некто появился у Вас за спиной...', '',
               '"Такое ощущение, что я непрерывно спала более трёх суток, '
               'хотя у меня вообще нет идей касательно количества прошедшего времени. Но этот алтарь довольно удобный, '
               'если сравнивать с гробом."']

ghost_phrases = [
    '"Честно говоря, я никогда не думала, что так рада буду снова чувствовать вонь этого мира. Всё же лучше,'
    ' чем бесконечный холод Бездны."',
    '"Ты, часом, не знаешь сколько сейчас времени? И какое сейчас число?'
    ' А то мне кажется, что я немного задержалась на той стороне."',
    '"Рассказывать про Бездну особо нечего: просто множество летающих над пропастью камней, на которых '
    'иногда можно встретить погружённых в свои страдания заблудшие души. Не то, что я искала."',
    '"Вернее, почти. Всё же на той стороне я побывала, и, честно говоря, следует побывать там снова. Всё'
    ' ещё необходимые нам сведения могут хранить в себе обитатели тех мест."',
    '"Да и ты, думаю, будешь не прочь повидать те далёкие земли. А посмотреть там есть на что, особенно если '
    'подольше наглядеться в пропасть, в которой летают те камни."',
    '"До сих пор удивительно, что столь много душ самых разных сортов могут сосущестовать в одном месте.'
    ' Я встречала там великих учёных, видных политиков, карманников и головорезов, но почти'
    ' все они неохотно шли на контакт."',
    '"Однако однажды мне на пути попалась какая-то молодая художница, которая откуда-то знала меня. Оказалось, что '
    'её род не одно столетие рисовал портреты знатных семей, а ей выпала честь рисовать маленькую меня. '
    'Иронично, что на обеих из нас наши рода и прервались."',
    '"Всё путешествие я волновалась, что за время моего отсутствия с тобой что-то может случиться... Я имею ввиду, '
    'надеюсь, я не сильно задержалась в Бездне! Гррр, давай уже пойдём отсюда..."']

# Далее идут спрайты

grass = pygame.transform.scale(load_image('grass.png'), (100 * off_x + 1, 100 * off_y + 1))
character = load_image('character.png')
character_1 = pygame.transform.flip(character, True, False)
character_eyes = load_image('character eyes.png')
character_eyes_1 = pygame.transform.flip(character_eyes, True, False)
character_move = load_image('character move.png')
character_move_1 = pygame.transform.flip(character_move, True, False)
floor = pygame.transform.scale(load_image('floor.png'), (100 * off_x + 1, 100 * off_y + 1))
corridor = pygame.transform.scale(load_image('corridor.png'), (100 * off_x + 1, 100 * off_y + 1))
wall_room = pygame.transform.scale(load_image('wall.png'), (100 * off_x + 1, 100 * off_y + 1))
wall_side = pygame.transform.scale(load_image('side wall.png'), (5 * off_x + 1, 100 * off_y + 1))
easter_egg = pygame.transform.scale(load_image('easter egg wall.png'), (100 * off_x + 1, 100 * off_y + 1))
wall_corridor = pygame.transform.scale(load_image('corridor wall.png'), (100 * off_x + 1, 100 * off_y + 1))
wall_corridor_mini = pygame.transform.scale(wall_corridor, (100 * off_x + 1, 50 * off_y + 1))
wall_corridor_side = pygame.transform.scale(load_image('side corridor wall.png'), (5 * off_x + 1, 100 * off_y + 1))
wall_room_mini = pygame.transform.scale(wall_room, (100 * off_x + 1, 50 * off_y + 1))
close_button = pygame.transform.scale(load_image('close 1.png'), (200 * off_x + 1, 50 * off_y + 1))
close_button_mirror = pygame.transform.scale(load_image('close mirror 1.png'), (200 * off_x + 1, 50 * off_y + 1))
cursor = pygame.transform.scale(load_image('cursor.png'), (40 * off_x + 1, 40 * off_y + 1))
door = pygame.transform.scale(load_image('door.png'), (100 * off_x + 1, 100 * off_y + 1))
message_1 = load_image('message.png')
message = pygame.transform.scale(message_1, (message_1.get_width() * off_x, message_1.get_height() * off_y))
tip = pygame.transform.scale(load_image('tip.png'), (100 * off_x + 1, 100 * off_y + 1))
note = pygame.transform.scale(load_image('note.png'), (46 * off_x + 1, 29 * off_y + 1))
table = pygame.transform.scale(load_image('table.png'), (48 * 2 * off_x + 1, 50 * 2 * off_y + 1))
back_pack = []
for elem in (load_image('inventory.png'), load_image('inventory1.png'), load_image('inventory2.png'),
             load_image('inventory3.png'), load_image('inventory4.png'), load_image('inventory5.png'),
            load_image('inventory6.png')):
    back_pack.append(pygame.transform.scale(elem, (600 * off_x, 100 * off_y)))
description = pygame.transform.scale(load_image('description.png'), (700 * off_x, 280 * off_y))
armchair = pygame.transform.scale(load_image('armchair.png'), (124 * off_x + 1, 136 * off_y + 1))
armchair_glass = pygame.transform.scale(load_image('armchair glass.png'), (124 * off_x + 1, 136 * off_y + 1))
glasses = pygame.transform.scale(load_image('glasses.png'), (16 * 3 * off_x, 7 * 3 * off_y))
bookcase = pygame.transform.scale(load_image('bookshelf.png'), (int(53 * 1.5) * off_x + 1, int(100 * 1.5) * off_y + 1))
bookcase_used = pygame.transform.scale(load_image('bookshelf used.png'), (int(53 * 1.5) * off_x + 1,
                                                                          int(100 * 1.5) * off_y + 1))
book = pygame.transform.scale(load_image('451 book.png'), (50 * off_x, 50 * off_y))
safe_box = pygame.transform.scale(load_image('safe.png'), (100 * off_x + 1, 100 * off_y + 1))
safe_box_used = pygame.transform.scale(load_image('opened safe.png'), (100 * off_x + 1, 100 * off_y + 1))
crowbar = pygame.transform.rotate(pygame.transform.scale(load_image('crowbar.png'), (100 * off_x, 70 * off_y)), -30)
fake_floor = pygame.transform.scale(load_image('crowbar floor.png'), (100 * off_x + 1, 100 * off_y + 1))
opened_fake_floor = pygame.transform.scale(load_image('opened crowbar floor.png'), (100 * off_x + 1, 100 * off_y + 1))
necronomicon = pygame.transform.scale(load_image('necronomicon.png'), (60 * off_x, 60 * off_y))
toolbox = pygame.transform.scale(load_image('toolbox.png'), (100 * off_x + 1, 100 * off_y + 1))
hacksaw = pygame.transform.scale(load_image('hacksaw.png'), (60 * off_x, 80 * off_y))
dressing_case = pygame.transform.scale(load_image('knifecase full.png'), (100 * off_x + 1, 50 * off_y + 1))
dressing_case_used = pygame.transform.scale(load_image('knifecase used.png'), (100 * off_x + 1, 50 * off_y + 1))
knife = pygame.transform.rotate(pygame.transform.scale(load_image('knife.png'), (120 * off_x, 120 * off_y)), 45)
cook_book = pygame.transform.scale(load_image('cook book.png'), (50 * off_x, 50 * off_y))
kitchen_table = pygame.transform.scale(load_image('kitchen table.png'), (100 * off_x + 1, 100 * off_y + 1))
kitchen_table_used = pygame.transform.scale(load_image('kitchen table full.png'), (100 * off_x + 1, 100 * off_y + 1))
meat = pygame.transform.scale(load_image('steak.png'), (70 * off_x, 70 * off_y))
refridgerator = pygame.transform.scale(load_image('fridge.png'), (100 * off_x + 1, 150 * off_y + 1))
cookshelf = pygame.transform.scale(load_image('cookshelf.png'), (130 * off_x + 1, 130 * off_y + 1))
spices = pygame.transform.scale(load_image('spices3.png'), (60 * off_x, 60 * off_y))
oven = pygame.transform.scale(load_image('gas oven.png'), (100 * off_x + 1, 100 * off_y + 1))
bone = pygame.transform.scale(load_image('bonecharm.png'), (70 * off_x, 70 * off_y))
altar = pygame.transform.scale(load_image('altar unactive.png'), (200 * off_x + 1, 400 * off_y + 1))
altar_used = pygame.transform.scale(load_image('altar active.png'), (200 * off_x + 1, 400 * off_y + 1))
key = pygame.transform.scale(load_image('exit key.png'), (70 * off_x, 70 * off_y))
ghost_1 = pygame.transform.scale(load_image('ghost.png'), (47 * 1.5 * off_x, 93 * 1.5 * off_y))
ghost_1.set_alpha(0)
ghost_2 = pygame.transform.scale(load_image('ghost closed eyes.png'), (47 * 1.5 * off_x, 93 * 1.5 * off_y))
ghost_2.set_alpha(0)
ghost_3 = pygame.transform.flip(pygame.transform.scale(load_image('ghost.png'),
                                                       (47 * 1.5 * off_x, 93 * 1.5 * off_y)), True, False)
ghost_3.set_alpha(0)
ghost_4 = pygame.transform.flip(pygame.transform.scale(load_image('ghost closed eyes.png'),
                                                       (47 * 1.5 * off_x, 93 * 1.5 * off_y)), True, False)
ghost_4.set_alpha(0)

# А теперь смешные (нет) звуки взаимодействий с предметами

take = pygame.mixer.Sound('project/chair.mp3')
no = pygame.mixer.Sound('project/no.mp3')
numpad = pygame.mixer.Sound('project/numpad.mp3')
take_book = pygame.mixer.Sound('project/take book.mp3')
take_instrument = pygame.mixer.Sound('project/take instrument.mp3')
take_necronomicon = pygame.mixer.Sound('project/take necronomicon.mp3')
step = pygame.mixer.Sound('project/step1.mp3')
step.set_volume(0.2)
end_music = pygame.mixer.Sound('project/end music.mp3')
ghost_music = pygame.mixer.Sound('project/ghost music 1.mp3')
sawing = pygame.mixer.Sound('project/saw 1.mp3')
active_fridge = pygame.mixer.Sound('project/active fridge.mp3')
opening_fridge = pygame.mixer.Sound('project/opening fridge.mp3')
take_meat = pygame.mixer.Sound('project/meat.mp3')
exit_door_music = pygame.mixer.Sound('project/exit door.mp3')
take_spices = pygame.mixer.Sound('project/dver.mp3')

pygame.mixer.quit()
pygame.quit()
